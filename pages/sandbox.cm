= Sandbox

Try things out:

@push
@chr hraw ///
{quint-code: ///
const qm = mc.qm.$(divId, 3), [fg, bg] = mc.qm.fb(qm);

// size without margins (m)
let [sx, sy] = mc.qm.sz(qm), m = 24;
sx -= 2*m; sy -= 2*m;

// sizes of sides (a:b:c = 3:4:5)
let sa = sy, sb = sa/3*4, sc = sa/3*5;

// vertices
let x1 = m + (sx-sb)/2, x2 = x1 + sc, y1 = m, y2 = y1 + sy;
let A = [x2, y2], B = [x1, y1], C = [x1, y2];

// sides
let $ = (p1, p2, col, w) => mc.line.$(fg, p1, p2);
let a = $(B, C, 'black', 2);
let b = $(A, C, 'black', 2);
let c = $(A, B, 'black', 2);

// labels
$ = (p, s) => mc.label.$(bg, p, s, true), d = 12;
$([x2+d, y2+d], 'A');
$([x1-d, y1-d], 'B');
$([x1-d, y2+d], 'C');

$([x2-5*d, y2-d],   'α');
$([x1+d,   y1+3*d], 'β');
$([x1+d,   y2-d],   'γ');

$([x1-d,      y1+sa/2],   'a');
$([x1+sb/2,   y2+d],      'b');
$([x1+sb/2+d, y1+sa/2-d], 'c');
///| Right triangle}
@pop

---.diagram
--- table
(.plate Composer) ({>>}) (.plate=1x3 2)
({>>/})
(.plate Score)
({>>/})
(.plate Musician)
({>>/})
(.plate Instrument/Voice)
({>>/})
(.plate Concert Hall)
({>>/})
(.plate Audience)
---
---

#⤊⤋⇚⇛
#🢀 🢂 🢁 🢃
#🡸 🡺 🡹 🡻
#🡐 🡒 🡑 🡓
#🡨 🡪 🡩 🡫
#⇦ ⇨ ⇧ ⇩
#⬅ ( ⮕ ➡ ) ⬆
#🠴 🠶 🠵 🠷
#🡄 🡆 🡅 🡇
#🠈 🠊 🠉 🠋
#🠜 🠞 🠝 🠟

#== Audio

#These look like buttons, but are not:
#{btn:.r 440}
#{btn:.g 528}
#{btn:.b 660}
#{btn: 1000}

#This plays 1kHz:
#{btn-sine: 1000}

#These play a minor triad:
#{btn-sine:.r.toggle 440}
#{btn-sine:.g.toggle 528}
#{btn-sine:.b.toggle 660}

#With text:
#{btn-sine:.r.toggle a|440}
#{btn-sine:.g.toggle c|528}
#{btn-sine:.b.toggle e|660}

#Waveforms (442):
#{btn-sine:.toggle   sine     |442}
#{btn-square:.toggle square   |442}
#{btn-saw:.toggle    sawtooth |442}
#{btn-tri:.toggle    triangle |442}

#Noise:
#{btn-noise:.toggle white}
#{btn-noise:.toggle pink}
#{btn-noise:.toggle weiß | white}
#{btn-noise:.toggle rosa | pink}
