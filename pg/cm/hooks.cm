@chr b  *
@chr em /
#-------------------------------------------------------------------------------
= Hooks
Hooks are a powerful mechanism of CM.

A hook starts with {~\{} and ends with {~\}}. Within a hook, {~\|} may separates
its arguments (hook parts).

Hooks are of three kinds:
* simple formatting hooks,
* typographical hooks, and
* processing hooks.

Hooks can be nested (hooks can be used within hooks).

== Simple formatting hooks
A simple formatting hook begins with {~\{}, followed by a single format
indicating character and a content. The format indicating character can be:
- {~*} for bolded text
- {~/} for emphasised text (italics)
- {~#} for monospaced text (inline code snippet)

~~~.nohighlight
This is {*bold}, this is {/emphasized}, and this is {~monospaced and {*bold}}.
~~~

produces
---.box
This is {*bold}, this is {/emphasized}, and this is {~monospaced and {*bold}}.
---

==== Shortcut
Marking bold resp. emphasized text may be done in a shortcut way, by surrounding
the text by a pair of {~*} resp. {~/}. This feature must be first enabled by
pragmas:
~~~.nohighlight
@chr b  *
@chr em /

This is *bold*, and this is /emphasized/.
~~~

produces
---.box
This is *bold*, and this is /emphasized/.
---

== Typographical hooks
Typographical hooks are used to enter special characters into the output.
Of course, they are not strictly needed, since CM supports utf-8, but do come
handy.
~~~.nohighlight
{=>} {<=} {->} {<-} {--} {---}
~~~

produces
---.box
{=>} {<=} {->} {<-} {--} {---}
---

