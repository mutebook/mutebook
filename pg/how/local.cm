= Work with a local copy of $Mb

#-------------------------------------------------------------------------------
== $GH basics

* Create your personal {:https://github.com} account.
* Learn to {:create a repository|https://help.github.com/articles/create-a-repo/}, and {:edit files|https://help.github.com/articles/managing-files-on-github/} directly on $GH.
* Learn to {:clone|https://help.github.com/articles/cloning-a-repository/} a repository.
* Learn how to use ~git pull~, ~git commit~, and ~git push~.

#-------------------------------------------------------------------------------
== Local copy of $Mb

==== Clone the repository

Make a local clone of the $Mb repository. First, choose (and create) a place for the local working copy of mutebook, for example:
~~~
cd
mkdir LocalMutebook
cd LocalMutebook
~~~
Verify the location:
~~~
pwd
~~~
{=>} ~\/Users\/...\/LocalMutebook~

Clone the repository:
~~~
git clone git@github.com:mutebook/mutebook.git
~~~
Use your $GH credentials. If you do not have a $GH account and will not upload (push) your changes, you may also clone the repository so:
~~~
git clone https://github.com/mutebook/mutebook.git
~~~
This will create a new directory ~mutebook~ and download the $Mb content.

$Mb uses a {:{$CM}|https://github.com/CompactMarkup} engine as a submodule. Initialize the submodule:
~~~
cd mutebook
git submodule init
git submodule update
~~~

==== Update the local repository

To update your local repository (to fetch changes that may have been made since the time the local repository was created or last updated):
~~~
# (in 'mutebook')
git pull --recurse-submodules
git submodule update
~~~

#-------------------------------------------------------------------------------
== Running $Mb locally

$Mb is a web-based book and must be served by a web server. PHP has a built-in development server that can be used to that purpose:
~~~
# (in 'mutebook')
php -S localhost:8053
~~~

{wp:{~localhost}|localhost} means 'this computer'. ~8053~ is the web server port number; the port must be available. You may choose another number, if you wish.

Open the local {:mutebook web site|http://localhost:8053} in a web browser.

The web server can be terminated ("killed") by ~Ctrl+c~.

#-------------------------------------------------------------------------------
== Write $Mb text

Follow the instructions in "{:how_pages}".

#-------------------------------------------------------------------------------
== Upload changes to $GH

See what files were changed and what were the changes:
~~~
# (in 'mutebook')
git status
git diff
~~~

Stage the changes (only if /all/ changes are to be staged):
~~~
git add --all
~~~
You can also use ~git add <file ...>~ to stage only selected files.

Commit the staged files:
~~~
git commit -m '<a reasonable message>'
~~~

It is also possible to stage all /changed/ files (not new or deleted files) and commit them in one step:
~~~
git commit -am '<a reasonable message>'
~~~

To update (amend) the last commit (if it has not yet been pushed):
~~~
git commit --amend
~~~

Push to $GH:
~~~
git push
~~~

If there were meanwhile changes made to the $GH repository (by other contributors), you may first need to update (pull) the local repository and merge the changes before push can succeed.

#-------------------------------------------------------------------------------
== Update $MbMe

If you are certain that the latest pushed version of $Mb works, you may update the public {:{$Mb} website|https://{$MbMe}} by opening a special link {:https://{$MbMe}/pull.php?key=...} in a web browser. You must know the correct key, of course :)
